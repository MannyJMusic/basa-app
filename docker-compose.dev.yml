services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: basa-postgres-dev
    env_file:
      - .env.development
    environment:
      POSTGRES_DB: basa_dev
      POSTGRES_USER: basa_user
      POSTGRES_PASSWORD: basa_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - basa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U basa_user -d basa_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # BASA Application (Development)
  basa-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: basa-app-dev
    ports:
      - "3000:3000"
    env_file:
      - .env.development
    environment:
      # Override DATABASE_URL to use the Docker PostgreSQL service
      DATABASE_URL: postgresql://basa_user:basa_password@postgres:5432/basa_dev
      # Override NEXTAUTH_URL for Docker environment
      NEXTAUTH_URL: https://dev.businessassociationsa.com
      # Override NEXT_PUBLIC_APP_URL for Docker environment
      NEXT_PUBLIC_APP_URL: https://dev.businessassociationsa.com
      # Ensure we're in development mode
      NODE_ENV: development
    volumes:
      # Mount only the source code, let Docker handle node_modules and .next
      - ./src:/app/src:delegated
      - ./public:/app/public:delegated
      - ./prisma:/app/prisma:delegated
      - ./scripts:/app/scripts:delegated
      - ./package.json:/app/package.json:delegated
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:delegated
      - ./next.config.js:/app/next.config.js:delegated
      - ./tailwind.config.js:/app/tailwind.config.js:delegated
      - ./tsconfig.json:/app/tsconfig.json:delegated
      - ./postcss.config.js:/app/postcss.config.js:delegated
    networks:
      - basa-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Prisma Studio (Development)
  prisma-studio:
    image: node:18-alpine
    container_name: basa-prisma-studio-dev
    working_dir: /app
    command: ["sh", "-c", "npm install -g pnpm && pnpm install --frozen-lockfile && pnpm prisma studio --port 5555 --hostname 0.0.0.0"]
    env_file:
      - .env.development
    volumes:
      - ./prisma:/app/prisma:delegated
      - ./package.json:/app/package.json:delegated
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:delegated
    ports:
      - "5555:5555"
    networks:
      - basa-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  basa-network:
    driver: bridge 