services:
  # PostgreSQL Database (Production)
  postgres:
    image: postgres:15-alpine
    container_name: basa-postgres-prod
    env_file:
      - .env.production
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-basa_prod}
      POSTGRES_USER: ${POSTGRES_USER:-basa_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-basa_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - basa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-basa_user} -d ${POSTGRES_DB:-basa_prod}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # BASA Application (Production)
  basa-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: basa-app-prod
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-basa_user}:${POSTGRES_PASSWORD:-basa_password}@postgres:5432/${POSTGRES_DB:-basa_prod}
    networks:
      - basa-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prisma Studio (Production - Admin Only)
  prisma-studio:
    image: node:18-alpine
    container_name: basa-prisma-studio-prod
    working_dir: /app
    command: ["sh", "-c", "npm install -g pnpm && pnpm install --frozen-lockfile && pnpm prisma studio --port 5555 --hostname 0.0.0.0"]
    env_file:
      - .env.production
    volumes:
      - ./prisma:/app/prisma:delegated
      - ./package.json:/app/package.json:delegated
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:delegated
    ports:
      - "5555:5555"
    networks:
      - basa-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  basa-network:
    driver: bridge 