# =============================================================================
# BASA Application Environment Variables
# =============================================================================
# Copy this file to .env.development for development deployment
# Copy this file to .env.production for production deployment
# 
# IMPORTANT: Replace all placeholder values with your actual credentials
# Never commit .env.development or .env.production to version control

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL="postgresql://username:password@localhost:5432/basa_dev"

# =============================================================================
# NEXT.JS & AUTHENTICATION
# =============================================================================
# Your application URL (development: http://localhost:3000, production: https://yourdomain.com)
NEXTAUTH_URL="http://localhost:3000"

# Secret key for NextAuth (generate with: openssl rand -base64 32)
NEXTAUTH_SECRET="your-nextauth-secret-key-here"

# =============================================================================
# SOCIAL AUTHENTICATION PROVIDERS (Optional)
# =============================================================================
# Google OAuth (optional - for social login)
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# LinkedIn OAuth (optional - for social login)
# Get from: https://www.linkedin.com/developers/apps
LINKEDIN_CLIENT_ID="your-linkedin-client-id"
LINKEDIN_CLIENT_SECRET="your-linkedin-client-secret"

# =============================================================================
# STRIPE PAYMENT PROCESSING
# =============================================================================
# Stripe API Keys (use test keys for development, live keys for production)
# Get from: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY="sk_test_your-stripe-secret-key"
STRIPE_RESTRICTED_KEY="rk_test_your-stripe-restricted-key"
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_your-stripe-publishable-key"

# Stripe Webhook Secret (for payment verification)
# Get from: https://dashboard.stripe.com/webhooks
STRIPE_WEBHOOK_SECRET="whsec_your-stripe-webhook-secret"

# Stripe Price IDs for membership tiers (optional - can be set in admin panel)
# Get from: https://dashboard.stripe.com/products
STRIPE_ESSENTIAL_PRICE_ID="price_your-essential-tier-price-id"
STRIPE_PROFESSIONAL_PRICE_ID="price_your-professional-tier-price-id"
STRIPE_CORPORATE_PRICE_ID="price_your-corporate-tier-price-id"

# =============================================================================
# EMAIL CONFIGURATION (MAILGUN)
# =============================================================================
# Mailgun API configuration
# Get from: https://app.mailgun.com/app/account/security/api_keys
MAILGUN_API_KEY="key-your-mailgun-api-key"
MAILGUN_DOMAIN="your-domain.com"
MAILGUN_FROM_EMAIL="noreply@your-domain.com"

# Alternative SMTP configuration (optional)
# Use if you prefer SMTP over Mailgun API
SMTP_HOST="smtp.mailgun.org"
SMTP_PORT="587"
SMTP_USER="postmaster@your-domain.com"
SMTP_PASS="your-smtp-password"

# =============================================================================
# SENTRY ERROR MONITORING (Optional)
# =============================================================================
# Sentry DSN for error tracking
# Get from: https://sentry.io/settings/projects/
SENTRY_DSN="https://your-sentry-dsn@sentry.io/your-project-id"
SENTRY_ORG="your-sentry-org"
SENTRY_PROJECT="your-sentry-project"
SENTRY_AUTH_TOKEN="your-sentry-auth-token"

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# Node environment
NODE_ENV="development"

# Application URL for public access
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# Test email for development (optional)
TEST_EMAIL="test@example.com"

# =============================================================================
# ADMIN USER CREATION (for seeding)
# =============================================================================
# Admin user 1 (optional - for database seeding)
# These will be used when running pnpm db:seed
ADMIN1_FIRST_NAME="Admin"
ADMIN1_LAST_NAME="User"
ADMIN1_EMAIL="admin@yourdomain.com"
ADMIN1_PASSWORD="secure-admin-password"

# Admin user 2 (optional - for database seeding)
ADMIN2_FIRST_NAME="Manager"
ADMIN2_LAST_NAME="User"
ADMIN2_EMAIL="manager@yourdomain.com"
ADMIN2_PASSWORD="secure-manager-password"

# =============================================================================
# DOCKER CONFIGURATION (for containerized deployment)
# =============================================================================
# PostgreSQL database settings for Docker
# These are used in docker-compose files
POSTGRES_DB="basa_db"
POSTGRES_USER="basa_user"
POSTGRES_PASSWORD="basa_password"

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================
# CI/CD environment flag
CI="false"

# Next.js runtime (auto-detected)
NEXT_RUNTIME="nodejs"

# =============================================================================
# SECURITY & RATE LIMITING
# =============================================================================
# API rate limiting (requests per minute)
API_RATE_LIMIT="100"

# Session timeout in minutes
SESSION_TIMEOUT="30"

# =============================================================================
# ANALYTICS & TRACKING (Optional)
# =============================================================================
# Google Analytics ID
# Get from: https://analytics.google.com/
GOOGLE_ANALYTICS_ID="G-XXXXXXXXXX"

# Google Tag Manager ID
# Get from: https://tagmanager.google.com/
GOOGLE_TAG_MANAGER_ID="GTM-XXXXXXX"

# =============================================================================
# FILE UPLOAD & STORAGE (Optional)
# =============================================================================
# Vercel Blob storage (for file uploads)
# Get from: https://vercel.com/dashboard/stores
BLOB_READ_WRITE_TOKEN="your-vercel-blob-token"

# =============================================================================
# WEBHOOK & INTEGRATION URLS
# =============================================================================
# Webhook endpoints (auto-generated from NEXTAUTH_URL)
# Stripe webhook: ${NEXTAUTH_URL}/api/webhooks/stripe
# Payment webhook: ${NEXTAUTH_URL}/api/payments/webhook

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env.development: cp .env.example .env.development
# 2. Edit .env.development with your actual credentials
# 3. For development, you can use test keys for Stripe and Mailgun
# 4. Generate secure secrets using: openssl rand -base64 32
# 5. Test all integrations after setting up environment variables
# 6. Never commit .env.development to version control

# =============================================================================
# REQUIRED VARIABLES FOR BASIC FUNCTIONALITY
# =============================================================================
# These variables are required for the application to work:
# - DATABASE_URL
# - NEXTAUTH_URL
# - NEXTAUTH_SECRET
# - STRIPE_SECRET_KEY
# - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
# - MAILGUN_API_KEY
# - MAILGUN_DOMAIN
# - MAILGUN_FROM_EMAIL

# =============================================================================
# OPTIONAL VARIABLES
# =============================================================================
# These variables are optional but recommended:
# - GOOGLE_CLIENT_ID & GOOGLE_CLIENT_SECRET (for social login)
# - LINKEDIN_CLIENT_ID & LINKEDIN_CLIENT_SECRET (for social login)
# - SENTRY_DSN (for error tracking)
# - GOOGLE_ANALYTICS_ID (for analytics)
# - BLOB_READ_WRITE_TOKEN (for file uploads) 